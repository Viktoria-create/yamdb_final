name: CI/CD yamdb_final

on: push

jobs:
  tests:
    name: Test with flake8 and pytest
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install -r api_yamdb/requirements.txt --upgrade pip --use-pep517
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
    - name: Test with flake8
      run: python -m flake8
    - name: Test with pytest
      run: pytest

  build_and_push_to_dockerhub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref_name == 'master' # if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker 
        uses: docker/login-action@v1        
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push to Docker Hub
      uses: docker/build-push-action@v3
      with:
        context: "{{defaultContext}}:api_yamdb"
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/yamdb_final:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master #v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker compose down
            sudo docker compose rm web
            rm .env
            touch .env
            echo POSTGRES_ENGINE=${{ secrets.POSTGRES_ENGINE }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
            echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
            echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .env
            echo DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} >> .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            sudo docker compose up -d --build

  send_message:
    name: Send message
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message to telegram 
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!

